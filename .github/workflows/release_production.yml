name: deriv-com/deriv-static-content/release_production
on:
  push:
    branches:
      - master
env:
    RELEASE_TYPE: Production

jobs:
  release_production:
    environment: Production
    runs-on: ubuntu-latest
    container:
      image: node:18.16.1
    outputs:
      RELEASE_VERSION: ${{ steps.extract_version.outputs.RELEASE_VERSION }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
      - uses: "./.github/actions/versioning"
        with:
          target_branch: production
      - uses: "./.github/actions/publish_to_pages_production"
        with:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      - name: Extract version
        id: extract_version
        run: echo "RELEASE_VERSION=$(echo cat public/version)" >> $GITHUB_OUTPUT

  send_slack_notification:
    environment: Production
    runs-on: ubuntu-latest
    steps:
    - name: Conclusion
      uses: technote-space/workflow-conclusion-action@45ce8e0eb155657ab8ccf346ade734257fd196a5
    - name: Create Slack Message
      id: create_slack_message
      env:
        RELEASE_VERSION: ${{ needs.release_production.outputs.RELEASE_VERSION }}
      run: |
          if [ $WORKFLOW_CONCLUSION == "success" ]; then
            echo "MESSAGE=$RELEASE_TYPE Release succeeded for static.deriv.com with version $RELEASE_VERSION" >> $GITHUB_OUTPUT
          else
            echo "MESSAGE=$RELEASE_TYPE Release failed for static.deriv.com with version $RELEASE_VERSION" >> $GITHUB_OUTPUT
          fi
    - name: Send Slack Notification 
      uses: "deriv-com/shared-actions/.github/actions/send_slack_notification@master" 
      with:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        status: ${{ env.WORKFLOW_CONCLUSION }}
        release_type: Production
        version: ${{ needs.release_production.outputs.RELEASE_VERSION }}
        MESSAGE: ${{ step.outputs.create_slack_message.MESSAGE }}
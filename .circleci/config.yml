version: 2.1
orbs:
  k8s: circleci/kubernetes@0.7.0
  slack: circleci/slack@3.4.2
commands:
  versioning:
    description: "Add version to build"
    parameters:
      target_branch:
        type: string
    steps:
      - run:
          name: Tag build
          command: echo "<< parameters.target_branch >> $(date -u +'%Y-%m-%dT%H:%M:%SZ')" > public/version
  docker_build_push:
    description: "Build and Push image to docker hub"
    parameters:
      docker_image_latest_tag:
        type: string
        default: "latest-staging"
    steps:
      - setup_remote_docker
      - run:
          name: Building docker image
          command: |
            TAG=${CIRCLE_TAG:-$CIRCLE_SHA1}
            docker build -t ${DOCKHUB_ORGANISATION}/static-deriv-app:${TAG} -t ${DOCKHUB_ORGANISATION}/static-deriv-app:<< parameters.docker_image_latest_tag >> .
      - run:
          name: Pushing Image to docker hub
          command: |
            TAG=${CIRCLE_TAG:-$CIRCLE_SHA1}
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker push ${DOCKHUB_ORGANISATION}/static-deriv-app:${TAG}
            docker push ${DOCKHUB_ORGANISATION}/static-deriv-app:<< parameters.docker_image_latest_tag >>

  k8s_deploy:
    description: "Deploy to k8s cluster"
    parameters:
      k8s_version:
        type: string
        default: ${CIRCLE_SHA1}
      k8s_namespace:
        type: string
        default: "static-deriv-app-production"
    steps:
      - k8s/install-kubectl
      - run:
          name: Deploying to k8s cluster for service static-deriv-app
          command: |
            TAG=${CIRCLE_TAG:-$CIRCLE_SHA1}
            export NAMESPACE=<< parameters.k8s_namespace >>
            git clone https://github.com/binary-com/devops-ci-scripts
            cd devops-ci-scripts/k8s-build_tools
            echo $CA_CRT | base64 --decode > ca.crt
            ./release.sh static-deriv-app ${TAG}

  notify_slack:
    description: "Notify slack"
    steps:
      - slack/status:
          include_project_field: false
          failure_message: "Release failed for static.deriv.com with version *$(cat public/version)*"
          success_message: "Release succeeded for static.deriv.com with version *$(cat public/version)*"
          webhook: ${SLACK_WEBHOOK}

  publish_to_pages_production:
    description: "Publish to cloudflare pages"
    steps:
      - run:
          name: "Publish to cloudflare pages (production)"
          command: |
            cd public
            npx wrangler pages publish . --project-name=deriv-static-content-pages --branch=main
            echo "New website - http://cf-pages-deriv-static-content.deriv.com"

jobs:
  release_production:
    docker:
      - image: cimg/node:18.4.0
    steps:
      - checkout
      - versioning:
          target_branch: "production"
      - publish_to_pages_production
      - docker_build_push:
          docker_image_latest_tag: latest
      - k8s_deploy
      - notify_slack

workflows:
  release_production:
    jobs:
      - release_production:
          context: binary-frontend-artifact-upload
          filters:
            branches:
              only: /^master$/
